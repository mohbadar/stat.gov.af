import { ElementRef, EventEmitter, OnDestroy, OnChanges, OnInit, SimpleChanges, DoCheck, IterableDiffer, IterableDiffers, KeyValueDiffer, KeyValueDiffers } from '@angular/core';
import { PlotlyService } from '../plotly.service';
import { Plotly } from '../plotly.interface';
export declare class PlotComponent implements OnInit, OnChanges, OnDestroy, DoCheck {
    plotly: PlotlyService;
    iterableDiffers: IterableDiffers;
    keyValueDiffers: KeyValueDiffers;
    protected defaultClassName: string;
    plotlyInstance: Plotly.PlotlyHTMLElement;
    resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;
    layoutDiffer: KeyValueDiffer<string, any>;
    dataDiffer: IterableDiffer<Plotly.Data>;
    datarevision: number;
    plotEl: ElementRef;
    data?: Plotly.Data[];
    layout?: Partial<Plotly.Layout>;
    config?: Partial<Plotly.Config>;
    frames?: Partial<Plotly.Config>[];
    style?: {
        [key: string]: string;
    };
    divId?: string;
    revision: number;
    className?: string | string[];
    debug: boolean;
    useResizeHandler: boolean;
    initialized: EventEmitter<Plotly.Figure>;
    update: EventEmitter<Plotly.Figure>;
    purge: EventEmitter<Plotly.Figure>;
    error: EventEmitter<Error>;
    afterExport: EventEmitter<{}>;
    afterPlot: EventEmitter<{}>;
    animated: EventEmitter<{}>;
    animatingFrame: EventEmitter<{}>;
    animationInterrupted: EventEmitter<{}>;
    autoSize: EventEmitter<{}>;
    beforeExport: EventEmitter<{}>;
    buttonClicked: EventEmitter<{}>;
    click: EventEmitter<{}>;
    clickAnnotation: EventEmitter<{}>;
    deselect: EventEmitter<{}>;
    doubleClick: EventEmitter<{}>;
    framework: EventEmitter<{}>;
    hover: EventEmitter<{}>;
    legendClick: EventEmitter<{}>;
    legendDoubleClick: EventEmitter<{}>;
    relayout: EventEmitter<{}>;
    restyle: EventEmitter<{}>;
    redraw: EventEmitter<{}>;
    selected: EventEmitter<{}>;
    selecting: EventEmitter<{}>;
    sliderChange: EventEmitter<{}>;
    sliderEnd: EventEmitter<{}>;
    sliderStart: EventEmitter<{}>;
    transitioning: EventEmitter<{}>;
    transitionInterrupted: EventEmitter<{}>;
    unhover: EventEmitter<{}>;
    eventNames: string[];
    constructor(plotly: PlotlyService, iterableDiffers: IterableDiffers, keyValueDiffers: KeyValueDiffers);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    getWindow(): any;
    getClassName(): string;
    createPlot(): Promise<void>;
    createFigure(): Plotly.Figure;
    updatePlot(): Promise<void>;
    updateWindowResizeHandler(): void;
    dataDifferTrackBy(_: number, item: any): any;
}
