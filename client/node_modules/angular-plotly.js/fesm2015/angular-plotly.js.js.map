{"version":3,"file":"angular-plotly.js.js.map","sources":["ng://angular-plotly.js/src/app/shared/plotly.service.ts","ng://angular-plotly.js/src/app/shared/plot/plot.component.ts","ng://angular-plotly.js/src/app/shared/shared.module.ts","ng://angular-plotly.js/src/app/plotly/plotly.module.ts","ng://angular-plotly.js/src/app/plotly-via-cdn/plotly-via-cdn.module.ts","ng://angular-plotly.js/src/app/plotly-via-window/plotly-via-window.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plotly } from './plotly.interface';\n\ntype PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlotlyService {\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\n    protected static _plotly?: any = undefined;\n    protected static _moduleName?: PlotlyName = undefined;\n\n    public static setModuleName(moduleName: PlotlyName) {\n        PlotlyService._moduleName = moduleName;\n    }\n\n    public static setPlotly(plotly: any) {\n        PlotlyService._plotly = plotly;\n    }\n\n    public static insert(instance: Plotly.PlotlyHTMLElement) {\n        const index = PlotlyService.instances.indexOf(instance);\n        if (index === -1) {\n            PlotlyService.instances.push(instance);\n        }\n        return instance;\n    }\n\n    public static remove(div: Plotly.PlotlyHTMLElement) {\n        const index = PlotlyService.instances.indexOf(div);\n        if (index >= 0) {\n            PlotlyService.instances.splice(index, 1);\n            PlotlyService._plotly.purge(div);\n        }\n    }\n\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\n        for (const instance of PlotlyService.instances) {\n            if (instance && instance.id === id) {\n                return instance;\n            }\n        }\n        return undefined;\n    }\n\n    public getPlotly() {\n        if (typeof PlotlyService._plotly === 'undefined') {\n            const msg = PlotlyService._moduleName === 'ViaCDN'\n                ? `Error loading Peer dependency plotly.js from CDN url`\n                : `Peer dependency plotly.js isn't installed`;\n\n            throw new Error(msg);\n        }\n\n        return PlotlyService._plotly;\n    }\n\n    protected waitFor(fn: () => boolean): Promise<void> {\n        return new Promise((resolve) => {\n            const localFn = () => {\n                fn() ? resolve() : setTimeout(localFn, 10);\n            };\n\n            localFn();\n        });\n    }\n\n    // tslint:disable max-line-length\n    public async newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]) {\n        await this.waitFor(() => this.getPlotly() !== 'waiting');\n\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this.getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n        }\n\n        return this.getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n    }\n\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]) {\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this.getPlotly().plot(div, obj) as Promise<any>;\n        }\n\n        return this.getPlotly().plot(div, data, layout, config) as Promise<any>;\n    }\n\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]) {\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this.getPlotly().react(div, obj) as Promise<any>;\n        }\n\n        return this.getPlotly().react(div, data, layout, config) as Promise<any>;\n    }\n    // tslint:enable max-line-length\n\n    public resize(div: Plotly.PlotlyHTMLElement): void {\n        return this.getPlotly().Plots.resize(div);\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild,\n    DoCheck,\n    IterableDiffer,\n    IterableDiffers,\n    KeyValueDiffer,\n    KeyValueDiffers,\n} from '@angular/core';\n\nimport { PlotlyService } from '../plotly.service';\nimport { Plotly } from '../plotly.interface';\n\n// @dynamic\n@Component({\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [className]=\"getClassName()\" [ngStyle]=\"style\"></div>`,\n    providers: [PlotlyService],\n})\nexport class PlotComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    protected defaultClassName = 'js-plotly-plot';\n\n    public plotlyInstance: Plotly.PlotlyHTMLElement;\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    public layoutDiffer: KeyValueDiffer<string, any>;\n    public dataDiffer: IterableDiffer<Plotly.Data>;\n    public datarevision: number = 0;\n\n    @ViewChild('plot') plotEl: ElementRef;\n\n    @Input() data?: Plotly.Data[];\n    @Input() layout?: Partial<Plotly.Layout>;\n    @Input() config?: Partial<Plotly.Config>;\n    @Input() frames?: Partial<Plotly.Config>[];\n    @Input() style?: { [key: string]: string };\n\n    @Input() divId?: string;\n    @Input() revision: number = 0;\n    @Input() className?: string | string[];\n    @Input() debug: boolean = false;\n    @Input() useResizeHandler: boolean = false;\n\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\n    @Output() update = new EventEmitter<Plotly.Figure>();\n    @Output() purge = new EventEmitter<Plotly.Figure>();\n    @Output() error = new EventEmitter<Error>();\n\n    @Output() afterExport = new EventEmitter();\n    @Output() afterPlot = new EventEmitter();\n    @Output() animated = new EventEmitter();\n    @Output() animatingFrame = new EventEmitter();\n    @Output() animationInterrupted = new EventEmitter();\n    @Output() autoSize = new EventEmitter();\n    @Output() beforeExport = new EventEmitter();\n    @Output() buttonClicked = new EventEmitter();\n    @Output() click = new EventEmitter();\n    @Output() clickAnnotation = new EventEmitter();\n    @Output() deselect = new EventEmitter();\n    @Output() doubleClick = new EventEmitter();\n    @Output() framework = new EventEmitter();\n    @Output() hover = new EventEmitter();\n    @Output() legendClick = new EventEmitter();\n    @Output() legendDoubleClick = new EventEmitter();\n    @Output() relayout = new EventEmitter();\n    @Output() restyle = new EventEmitter();\n    @Output() redraw = new EventEmitter();\n    @Output() selected = new EventEmitter();\n    @Output() selecting = new EventEmitter();\n    @Output() sliderChange = new EventEmitter();\n    @Output() sliderEnd = new EventEmitter();\n    @Output() sliderStart = new EventEmitter();\n    @Output() transitioning = new EventEmitter();\n    @Output() transitionInterrupted = new EventEmitter();\n    @Output() unhover = new EventEmitter();\n\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\n        'beforeExport', 'buttonClicked', 'click', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\n        'legendClick', 'legendDoubleClick', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\n        'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover'];\n\n    constructor(\n        public plotly: PlotlyService,\n        public iterableDiffers: IterableDiffers,\n        public keyValueDiffers: KeyValueDiffers,\n    ) { }\n\n    ngOnInit() {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n    }\n\n    ngOnDestroy() {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n            this.resizeHandler = undefined;\n        }\n\n        const figure = this.createFigure();\n        this.purge.emit(figure);\n        PlotlyService.remove(this.plotlyInstance);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let shouldUpdate = false;\n\n        const revision: SimpleChange = changes.revision;\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        const debug: SimpleChange = changes.debug;\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        if (shouldUpdate) {\n            this.updatePlot();\n        }\n\n        this.updateWindowResizeHandler();\n    }\n\n    ngDoCheck() {\n        let shouldUpdate = false;\n\n        if (this.layoutDiffer) {\n            const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n            if (layoutHasDiff) {\n                shouldUpdate = true;\n            }\n        } else if (this.layout) {\n            this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n        } else {\n            this.layoutDiffer = undefined;\n        }\n\n        if (this.dataDiffer) {\n            const dataHasDiff = this.dataDiffer.diff(this.data);\n            if (dataHasDiff) {\n                shouldUpdate = true;\n            }\n        } else if (Array.isArray(this.data)) {\n            this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n        } else {\n            this.dataDiffer = undefined;\n        }\n\n        if (shouldUpdate && this.plotlyInstance) {\n            this.datarevision += 1;\n            this.updatePlot();\n        }\n    }\n\n    getWindow(): any {\n        return window;\n    }\n\n    getClassName(): string {\n        let classes = [this.defaultClassName];\n\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        } else if (this.className) {\n            classes.push(this.className);\n        }\n\n        return classes.join(' ');\n    }\n\n    createPlot(): Promise<void> {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config, this.frames).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n\n            this.eventNames.forEach(name => {\n                const eventName = `plotly_${name.toLowerCase()}`;\n                plotlyInstance.on(eventName, (data: any) => (this[name] as EventEmitter<void>).emit(data));\n            });\n\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n\n    createFigure(): Plotly.Figure {\n        const p: any = this.plotlyInstance;\n        const figure: Plotly.Figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n\n        return figure;\n    }\n\n    updatePlot() {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n\n        const layout = {\n            ...{datarevision: this.datarevision},\n            ...this.layout,\n        };\n\n        return this.plotly.update(this.plotlyInstance, this.data, layout, this.config, this.frames).then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        }, err => {\n            console.error('Error while updating plot:', err);\n            this.error.emit(err);\n        });\n    }\n\n    updateWindowResizeHandler() {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\n            }\n        } else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n\n    dataDifferTrackBy(_: number, item: any): any {\n        const obj = Object.assign({}, item, { uid: '' });\n        return JSON.stringify(obj);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotComponent } from './plot/plot.component';\nimport { PlotlyService } from './plotly.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [PlotComponent],\n    providers: [PlotlyService],\n    exports: [PlotComponent]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotComponent } from '../shared/plot/plot.component';\nimport { PlotlyService } from '../shared/plotly.service';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n    imports: [CommonModule, SharedModule],\n    declarations: [],\n    exports: [PlotComponent]\n})\nexport class PlotlyModule {\n    public static plotlyjs: any = {};\n\n    constructor() {\n        if (!this.isValid()) {\n            const msg = \"Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start\"\n                      + \" to see how to add PlotlyJS to your project.\";\n            throw new Error(msg);\n        }\n\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n    }\n\n    private isValid(): boolean {\n        return PlotlyModule.plotlyjs !== undefined\n            && typeof PlotlyModule.plotlyjs.plot === 'function';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotComponent } from '../shared/plot/plot.component';\nimport { PlotlyService } from '../shared/plotly.service';\nimport { SharedModule } from '../shared/shared.module';\n\nexport type PlotlyBundleName = 'basic' | 'cartesian' | 'geo' | 'gl3d' | 'gl2d' | 'mapbox' | 'finance';\n\n// @dynamic\n@NgModule({\n    imports: [CommonModule, SharedModule],\n    declarations: [],\n    exports: [PlotComponent]\n})\nexport class PlotlyViaCDNModule {\n    private static _plotlyBundle?: string = null;\n    private static _plotlyVersion: string = 'latest';\n    static plotlyBundleNames: PlotlyBundleName[] = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\n\n    constructor(public plotlyService: PlotlyService) {\n        PlotlyService.setModuleName('ViaCDN');\n    }\n\n    static set plotlyVersion(version: string) {\n        const isOk = version === 'latest' || /^\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n        if (!isOk) {\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)`);\n        }\n\n        PlotlyViaCDNModule.loadViaCDN();\n        PlotlyViaCDNModule._plotlyVersion = version;\n    }\n\n    static set plotlyBundle(bundle: PlotlyBundleName) {\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n        if (!isOk) {\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n        }\n\n        PlotlyViaCDNModule._plotlyBundle = bundle;\n    }\n\n    static loadViaCDN() {\n        PlotlyService.setPlotly('waiting');\n\n        const init = () => {\n            const src = PlotlyViaCDNModule._plotlyBundle == null\n                ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule._plotlyVersion}.min.js`\n                : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule._plotlyBundle}-${PlotlyViaCDNModule._plotlyVersion}.min.js`;\n\n            const script: HTMLScriptElement = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = src;\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n\n            const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n            head.appendChild(script);\n\n            let counter = 200; // equivalent of 10 seconds...\n\n            const fn = () => {\n                const plotly = (window as any).Plotly;\n                if (plotly) {\n                    PlotlyService.setPlotly(plotly);\n                } else if (counter > 0) {\n                    counter --;\n                    setTimeout(fn, 50);\n                } else {\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n                }\n            };\n\n            fn();\n        };\n\n        setTimeout(init);\n    }\n\n    static forRoot(config: Partial<{version: string}>): never {\n        const url = \"https://github.com/plotly/angular-plotly.js#customizing-the-plotlyjs-bundle\";\n        throw new Error(`[PlotlyViaCDNModule] forRoot method is deprecated. Please see: ${url}`);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotComponent } from '../shared/plot/plot.component';\nimport { PlotlyService } from '../shared/plotly.service';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n    imports: [CommonModule, SharedModule],\n    declarations: [],\n    exports: [PlotComponent]\n})\nexport class PlotlyViaWindowModule {\n    constructor() {\n        const plotly = (window as any).Plotly;\n\n        if (typeof plotly === 'undefined') {\n            throw new Error(`Plotly object not found on window.`);\n        }\n\n        PlotlyService.setPlotly(plotly);\n    }\n\n    static forRoot(): never {\n        const url = \"https://github.com/plotly/angular-plotly.js#plotly-via-window-module\";\n        throw new Error(`[PlotlyViaWindowModule] forRoot method is deprecated. Please see: ${url}`);\n    }\n}\n"],"names":[],"mappings":"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"}
